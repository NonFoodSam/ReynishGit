    <div class="relative">
      <div
        id="reviewContainer"
        class="flex flex-col items-center justify-center align-middle bg-transparent opacity-0 transition-opacity duration-1000 h-[400px] md:h-[300px] overflow-hidden"
      >
        <div class="flex gap-x-1 text-white">
          <svg
            class="h-4 w-4 flex-none"
            viewBox="0 0 20 20"
            fill="currentColor"
            aria-hidden="true"
          >
            <path
              fill-rule="evenodd"
              d="M10.868 2.884c-.321-.772-1.415-.772-1.736 0l-1.83 4.401-4.753.381c-.833.067-1.171 1.107-.536 1.651l3.62 3.102-1.106 4.637c-.194.813.691 1.456 1.405 1.02L10 15.591l4.069 2.485c.713.436 1.598-.207 1.404-1.02l-1.106-4.637 3.62-3.102c.635-.544.297-1.584-.536-1.65l-4.752-.382-1.831-4.401z"
              clip-rule="evenodd"
            />
            4
          </svg>
          <!-- Repeat the above SVGs for stars as needed -->
        </div>
        <div
          class="flex flex-col w-[65%] sm:w-[58%] text-white justify-center items-center"
        >
          <p
            id="reviewText"
            class="font-light text-md text-center sm:text-xl mt-5"
          ></p>
          <div class="flex justify-center">
            <img id="reviewImage" class="w-12 h-12 rounded-full mt-5" />
          </div>
          <p id="reviewAuthor" class="text-sm mt-2"></p>
          <p id="reviewTitle" class="text-white/50 text-xs mt-1 mb-10"></p>
        </div>
      </div>
      <div
        class="review-bg absolute top-0 left-0 right-0 bottom-0 bg-transparent"
      ></div>
    </div>

    <script>
      // Define an array of reviews
      const reviews = [
        {
          stars: 5,
          text: "Jordan was highly knowledgeable and easy to work with. He listened to my ideas and understood what was required in order to bring them to life.",
          author: "Oskar Sundberg",
          image: "img/Oskar Sundberg - Parallel Rooms.JPG",
          title: "Parallel Rooms",
        },
        {
          stars: 5,
          text: "The sound he found for us was incredible! It made the gig our most memorable to date. Jordan has such a highly trained ear and knows how a band should sound in a live setting.",
          author: "Adam Maka",
          image: "img/Adam Maka - The Hiraeth.jpg",
          title: "The Hiraeth",
        },
        {
          stars: 5,
          text: "I feel like I learnt a lot from just watching him do his thing! He is very knowledgeable in his craft and I am very grateful that I was able to work with him!",
          author: "Ethan Simons",
          image: "img/Ethan Simons - Bleak.JPG",
          title: "Bleak",
        },
        // Add more reviews as needed
      ];

      // Function to update the review content with fade-in effect
      function updateReview(index) {
        const reviewContainer = document.getElementById("reviewContainer");
        reviewContainer.style.opacity = 0; // Set opacity to 0 to initiate fade-out

        setTimeout(() => {
          reviewContainer.classList.add("fade-in"); // Apply fade-in class
        }, 500); // Delay the fade-in animation to avoid overlap

        setTimeout(() => {
          const review = reviews[index];
          document.getElementById("reviewText").textContent = review.text;
          document.getElementById("reviewImage").src = review.image;
          document.getElementById("reviewAuthor").textContent = review.author;
          document.getElementById("reviewTitle").textContent = review.title;

          // Update stars (repeat the SVGs based on the number of stars in the review)
          const starsContainer = document.querySelector(
            ".flex.gap-x-1.text-white"
          );
          starsContainer.innerHTML = "";

          for (let i = 0; i < review.stars; i++) {
            const starSvg = document.createElementNS(
              "http://www.w3.org/2000/svg",
              "svg"
            );
            starSvg.setAttribute("class", "h-4 w-4 flex-none");
            starSvg.setAttribute("viewBox", "0 0 20 20");
            starSvg.setAttribute("fill", "currentColor");
            starSvg.setAttribute("aria-hidden", "true");

            const starPath = document.createElementNS(
              "http://www.w3.org/2000/svg",
              "path"
            );
            starPath.setAttribute("fill-rule", "evenodd");
            starPath.setAttribute(
              "d",
              "M10.868 2.884c-.321-.772-1.415-.772-1.736 0l-1.83 4.401-4.753.381c-.833.067-1.171 1.107-.536 1.651l3.62 3.102-1.106 4.637c-.194.813.691 1.456 1.405 1.02L10 15.591l4.069 2.485c.713.436 1.598-.207 1.404-1.02l-1.106-4.637 3.62-3.102c.635-.544.297-1.584-.536-1.65l-4.752-.382-1.831-4.401z"
            );
            starPath.setAttribute("clip-rule", "evenodd");

            starSvg.appendChild(starPath);
            starsContainer.appendChild(starSvg);
          }

          // Set opacity to 1 to initiate fade-in
          reviewContainer.style.opacity = 1;
        }, 1500); // Adjust this timeout to control the delay between the fade-out and fade-in
      }

      // Initialize with the first review
      let currentIndex = 0;
      updateReview(currentIndex);

      // Set a timer to advance to the next review every 3 seconds
      setInterval(() => {
        currentIndex = (currentIndex + 1) % reviews.length;
        updateReview(currentIndex);
      }, 8000); // Adjust the interval duration
    </script>
    <hr
      class="mb-20 h-px border-t-0 bg-transparent bg-gradient-to-r from-transparent via-neutral-500 to-transparent opacity-25 dark:opacity-100"
      --
    />
